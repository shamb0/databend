[package]
name = "databend-common-meta-raft-store"
description = "Raft state machine"
version = { workspace = true }
authors = { workspace = true }
license = { workspace = true }
publish = { workspace = true }
edition = { workspace = true }

[lib]
doctest = false
test = true

[features]
io-uring = ["databend-common-meta-sled-store/io-uring"]

[dependencies]
databend-common-base = { path = "../../common/base" }
databend-common-exception = { path = "../../common/exception" }
databend-common-grpc = { path = "../../common/grpc" }
databend-common-meta-api = { path = "../api" }
databend-common-meta-kvapi = { path = "../kvapi" }
databend-common-meta-sled-store = { path = "../sled-store" }
databend-common-meta-stoerr = { path = "../stoerr" }
databend-common-meta-types = { path = "../types" }
databend-common-tracing = { path = "../../common/tracing" }

openraft = { workspace = true }

# crates.io deps
anyhow = { workspace = true }
async-trait = { workspace = true }
byteorder = { workspace = true }
chrono = { workspace = true }
derive_more = { workspace = true }
futures = { workspace = true }
futures-async-stream = { workspace = true }
futures-util = { workspace = true }
hostname = "0.3.1"
itertools = { workspace = true }
log = { workspace = true }
maplit = "1.0.2"
minitrace = { workspace = true }
num = "0.4.0"
ordq = { workspace = true }
semver = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
stream-more = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true }

[dev-dependencies]
databend-common-base = { path = "../../common/base" }
pretty_assertions = "1.3.0"
tempfile = "3.4.0"
test-harness = "0.1.1"
tokio = { workspace = true }
