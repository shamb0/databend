ast            : map_cat({}, {})
raw expr       : map_cat(map(array(), array()), map(array(), array()))
checked expr   : map_cat<Map(Nothing) NULL, Map(Nothing) NULL>(CAST(map<Array(Nothing), Array(Nothing)>(array<>(), array<>()) AS Map(Nothing) NULL), CAST(map<Array(Nothing), Array(Nothing)>(array<>(), array<>()) AS Map(Nothing) NULL))
optimized expr : {} :: Map(Nothing)
output type    : Map(Nothing)
output domain  : {}
output         : {}


ast            : map_cat({}, {'k1': 'v1'})
raw expr       : map_cat(map(array(), array()), map(array('k1'), array('v1')))
checked expr   : map_cat<T0=String, T1=String><Map(T0, T1), Map(T0, T1)>(CAST(map<Array(Nothing), Array(Nothing)>(array<>(), array<>()) AS Map(String, String)), map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0>("k1"), array<T0=String><T0>("v1")))
optimized expr : {"k1":"v1"}
output type    : Map(String, String)
output domain  : {[{"k1"..="k1"}], [{"v1"..="v1"}]}
output         : {'k1':'v1'}


ast            : map_cat({'k1': 'v1'}, {})
raw expr       : map_cat(map(array('k1'), array('v1')), map(array(), array()))
checked expr   : map_cat<T0=String, T1=String><Map(T0, T1), Map(T0, T1)>(map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0>("k1"), array<T0=String><T0>("v1")), CAST(map<Array(Nothing), Array(Nothing)>(array<>(), array<>()) AS Map(String, String)))
optimized expr : {"k1":"v1"}
output type    : Map(String, String)
output domain  : {[{"k1"..="k1"}], [{"v1"..="v1"}]}
output         : {'k1':'v1'}


ast            : map_cat(map([a_col, b_col], [d_col, e_col]), map([c_col], [f_col]))
raw expr       : map_cat(map(array(a_col::String, b_col::String), array(d_col::String, e_col::String)), map(array(c_col::String), array(f_col::String)))
checked expr   : map_cat<T0=String, T1=String><Map(T0, T1), Map(T0, T1)>(map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0, T0>(a_col, b_col), array<T0=String><T0, T0>(d_col, e_col)), map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0>(c_col), array<T0=String><T0>(f_col)))
evaluation:
+--------+-------------------+-------------------+-------------------+-------------------+-------------------+-------------------+-----------------------------------------------+
|        | a_col             | b_col             | c_col             | d_col             | e_col             | f_col             | Output                                        |
+--------+-------------------+-------------------+-------------------+-------------------+-------------------+-------------------+-----------------------------------------------+
| Type   | String            | String            | String            | String            | String            | String            | Map(String, String)                           |
| Domain | {"a_k1"..="a_k3"} | {"b_k1"..="b_k3"} | {"c_k1"..="c_k3"} | {"aaa1"..="aaa3"} | {"bbb1"..="bbb3"} | {"ccc1"..="ccc3"} | Unknown                                       |
| Row 0  | 'a_k1'            | 'b_k1'            | 'c_k1'            | 'aaa1'            | 'bbb1'            | 'ccc1'            | {'a_k1':'aaa1', 'b_k1':'bbb1', 'c_k1':'ccc1'} |
| Row 1  | 'a_k2'            | 'b_k2'            | 'c_k2'            | 'aaa2'            | 'bbb2'            | 'ccc2'            | {'a_k2':'aaa2', 'b_k2':'bbb2', 'c_k2':'ccc2'} |
| Row 2  | 'a_k3'            | 'b_k3'            | 'c_k3'            | 'aaa3'            | 'bbb3'            | 'ccc3'            | {'a_k3':'aaa3', 'b_k3':'bbb3', 'c_k3':'ccc3'} |
+--------+-------------------+-------------------+-------------------+-------------------+-------------------+-------------------+-----------------------------------------------+
evaluation (internal):
+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                                                                                                                                                                                                                         |
+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a_col  | StringColumn { data: 0x615f6b31615f6b32615f6b33, offsets: [0, 4, 8, 12] }                                                                                                                                                                                                                                                                                    |
| b_col  | StringColumn { data: 0x625f6b31625f6b32625f6b33, offsets: [0, 4, 8, 12] }                                                                                                                                                                                                                                                                                    |
| c_col  | StringColumn { data: 0x635f6b31635f6b32635f6b33, offsets: [0, 4, 8, 12] }                                                                                                                                                                                                                                                                                    |
| d_col  | StringColumn { data: 0x616161316161613261616133, offsets: [0, 4, 8, 12] }                                                                                                                                                                                                                                                                                    |
| e_col  | StringColumn { data: 0x626262316262623262626233, offsets: [0, 4, 8, 12] }                                                                                                                                                                                                                                                                                    |
| f_col  | StringColumn { data: 0x636363316363633263636333, offsets: [0, 4, 8, 12] }                                                                                                                                                                                                                                                                                    |
| Output | ArrayColumn { values: Tuple([StringColumn { data: 0x615f6b31625f6b31635f6b31615f6b32625f6b32635f6b32615f6b33625f6b33635f6b33, offsets: [0, 4, 8, 12, 16, 20, 24, 28, 32, 36] }, StringColumn { data: 0x616161316262623163636331616161326262623263636332616161336262623363636333, offsets: [0, 4, 8, 12, 16, 20, 24, 28, 32, 36] }]), offsets: [0, 3, 6, 9] } |
+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : map_cat({'k1':'v1','k2':'v2'}, {'k1':'abc'})
raw expr       : map_cat(map(array('k1', 'k2'), array('v1', 'v2')), map(array('k1'), array('abc')))
checked expr   : map_cat<T0=String, T1=String><Map(T0, T1), Map(T0, T1)>(map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0, T0>("k1", "k2"), array<T0=String><T0, T0>("v1", "v2")), map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0>("k1"), array<T0=String><T0>("abc")))
optimized expr : {"k1":"abc", "k2":"v2"}
output type    : Map(String, String)
output domain  : {[{"k1"..="k2"}], [{"abc"..="v2"}]}
output         : {'k1':'abc', 'k2':'v2'}


ast            : map_cat(map([a_col, b_col], [d_col, e_col]), map([c_col], [f_col]))
raw expr       : map_cat(map(array(a_col::String, b_col::String), array(d_col::String, e_col::String)), map(array(c_col::String), array(f_col::String)))
checked expr   : map_cat<T0=String, T1=String><Map(T0, T1), Map(T0, T1)>(map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0, T0>(a_col, b_col), array<T0=String><T0, T0>(d_col, e_col)), map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0>(c_col), array<T0=String><T0>(f_col)))
evaluation:
+--------+-------------------+-------------------+-------------------+-------------------+-------------------+-------------------+-----------------------------------------------+
|        | a_col             | b_col             | c_col             | d_col             | e_col             | f_col             | Output                                        |
+--------+-------------------+-------------------+-------------------+-------------------+-------------------+-------------------+-----------------------------------------------+
| Type   | String            | String            | String            | String            | String            | String            | Map(String, String)                           |
| Domain | {"a_k1"..="c_k3"} | {"b_k1"..="c_k2"} | {"c_k1"..="c_k3"} | {"aaa1"..="aaa3"} | {"bbb1"..="bbb3"} | {"ccc1"..="ccc3"} | Unknown                                       |
| Row 0  | 'a_k1'            | 'b_k1'            | 'c_k1'            | 'aaa1'            | 'bbb1'            | 'ccc1'            | {'a_k1':'aaa1', 'b_k1':'bbb1', 'c_k1':'ccc1'} |
| Row 1  | 'a_k2'            | 'c_k2'            | 'c_k2'            | 'aaa2'            | 'bbb2'            | 'ccc2'            | {'a_k2':'aaa2', 'c_k2':'ccc2'}                |
| Row 2  | 'c_k3'            | 'b_k3'            | 'c_k3'            | 'aaa3'            | 'bbb3'            | 'ccc3'            | {'c_k3':'ccc3', 'b_k3':'bbb3'}                |
+--------+-------------------+-------------------+-------------------+-------------------+-------------------+-------------------+-----------------------------------------------+
evaluation (internal):
+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                                                                                                                                                                         |
+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a_col  | StringColumn { data: 0x615f6b31615f6b32635f6b33, offsets: [0, 4, 8, 12] }                                                                                                                                                                                                                                    |
| b_col  | StringColumn { data: 0x625f6b31635f6b32625f6b33, offsets: [0, 4, 8, 12] }                                                                                                                                                                                                                                    |
| c_col  | StringColumn { data: 0x635f6b31635f6b32635f6b33, offsets: [0, 4, 8, 12] }                                                                                                                                                                                                                                    |
| d_col  | StringColumn { data: 0x616161316161613261616133, offsets: [0, 4, 8, 12] }                                                                                                                                                                                                                                    |
| e_col  | StringColumn { data: 0x626262316262623262626233, offsets: [0, 4, 8, 12] }                                                                                                                                                                                                                                    |
| f_col  | StringColumn { data: 0x636363316363633263636333, offsets: [0, 4, 8, 12] }                                                                                                                                                                                                                                    |
| Output | ArrayColumn { values: Tuple([StringColumn { data: 0x615f6b31625f6b31635f6b31615f6b32635f6b32635f6b33625f6b33, offsets: [0, 4, 8, 12, 16, 20, 24, 28] }, StringColumn { data: 0x61616131626262316363633161616132636363326363633362626233, offsets: [0, 4, 8, 12, 16, 20, 24, 28] }]), offsets: [0, 3, 5, 7] } |
+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : map_cat({'k1': 'v1', 'k2': 'v2'}, {'k3': 'v3'})
raw expr       : map_cat(map(array('k1', 'k2'), array('v1', 'v2')), map(array('k3'), array('v3')))
checked expr   : map_cat<T0=String, T1=String><Map(T0, T1), Map(T0, T1)>(map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0, T0>("k1", "k2"), array<T0=String><T0, T0>("v1", "v2")), map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0>("k3"), array<T0=String><T0>("v3")))
optimized expr : {"k1":"v1", "k2":"v2", "k3":"v3"}
output type    : Map(String, String)
output domain  : {[{"k1"..="k3"}], [{"v1"..="v3"}]}
output         : {'k1':'v1', 'k2':'v2', 'k3':'v3'}


ast            : map_cat({'k1': 'v1'}, {'k2': 'v2', 'k3': 'v3'})
raw expr       : map_cat(map(array('k1'), array('v1')), map(array('k2', 'k3'), array('v2', 'v3')))
checked expr   : map_cat<T0=String, T1=String><Map(T0, T1), Map(T0, T1)>(map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0>("k1"), array<T0=String><T0>("v1")), map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0, T0>("k2", "k3"), array<T0=String><T0, T0>("v2", "v3")))
optimized expr : {"k1":"v1", "k2":"v2", "k3":"v3"}
output type    : Map(String, String)
output domain  : {[{"k1"..="k3"}], [{"v1"..="v3"}]}
output         : {'k1':'v1', 'k2':'v2', 'k3':'v3'}


ast            : map_cat({'k1': 'v1', 'k2': NULL}, {'k2': 'v2', 'k3': NULL})
raw expr       : map_cat(map(array('k1', 'k2'), array('v1', NULL)), map(array('k2', 'k3'), array('v2', NULL)))
checked expr   : map_cat<T0=String, T1=String NULL><Map(T0, T1), Map(T0, T1)>(map<T0=String, T1=String NULL><Array(T0), Array(T1)>(array<T0=String><T0, T0>("k1", "k2"), array<T0=String NULL><T0, T0>(CAST("v1" AS String NULL), CAST(NULL AS String NULL))), map<T0=String, T1=String NULL><Array(T0), Array(T1)>(array<T0=String><T0, T0>("k2", "k3"), array<T0=String NULL><T0, T0>(CAST("v2" AS String NULL), CAST(NULL AS String NULL))))
optimized expr : {"k1":"v1", "k2":"v2", "k3":NULL}
output type    : Map(String, String NULL)
output domain  : {[{"k1"..="k3"}], [{""..="v2"} ∪ {NULL}]}
output         : {'k1':'v1', 'k2':'v2', 'k3':NULL}


ast            : map_cat({'k1': {'nk1': 'nv1'}, 'k2': {'nk2': 'nv2'}}, {'k2': {'nk3': 'nv3'}, 'k3': {'nk4': 'nv4'}})
raw expr       : map_cat(map(array('k1', 'k2'), array(map(array('nk1'), array('nv1')), map(array('nk2'), array('nv2')))), map(array('k2', 'k3'), array(map(array('nk3'), array('nv3')), map(array('nk4'), array('nv4')))))
checked expr   : map_cat<T0=String, T1=Map(String, String)><Map(T0, T1), Map(T0, T1)>(map<T0=String, T1=Map(String, String)><Array(T0), Array(T1)>(array<T0=String><T0, T0>("k1", "k2"), array<T0=Map(String, String)><T0, T0>(map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0>("nk1"), array<T0=String><T0>("nv1")), map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0>("nk2"), array<T0=String><T0>("nv2")))), map<T0=String, T1=Map(String, String)><Array(T0), Array(T1)>(array<T0=String><T0, T0>("k2", "k3"), array<T0=Map(String, String)><T0, T0>(map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0>("nk3"), array<T0=String><T0>("nv3")), map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0>("nk4"), array<T0=String><T0>("nv4")))))
optimized expr : {"k1":{"nk1":"nv1"}, "k2":{"nk3":"nv3"}, "k3":{"nk4":"nv4"}}
output type    : Map(String, Map(String, String))
output domain  : {[{"k1"..="k3"}], [{[{"nk1"..="nk4"}], [{"nv1"..="nv4"}]}]}
output         : {'k1':{'nk1':'nv1'}, 'k2':{'nk3':'nv3'}, 'k3':{'nk4':'nv4'}}


ast            : map_cat({'k1': {'nk1': 'nv1'}, 'k2': {'nk2': 'nv2'}}, {'k1': {'nk1': 'new_nv1'}, 'k2': {'nk3': 'nv3'}})
raw expr       : map_cat(map(array('k1', 'k2'), array(map(array('nk1'), array('nv1')), map(array('nk2'), array('nv2')))), map(array('k1', 'k2'), array(map(array('nk1'), array('new_nv1')), map(array('nk3'), array('nv3')))))
checked expr   : map_cat<T0=String, T1=Map(String, String)><Map(T0, T1), Map(T0, T1)>(map<T0=String, T1=Map(String, String)><Array(T0), Array(T1)>(array<T0=String><T0, T0>("k1", "k2"), array<T0=Map(String, String)><T0, T0>(map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0>("nk1"), array<T0=String><T0>("nv1")), map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0>("nk2"), array<T0=String><T0>("nv2")))), map<T0=String, T1=Map(String, String)><Array(T0), Array(T1)>(array<T0=String><T0, T0>("k1", "k2"), array<T0=Map(String, String)><T0, T0>(map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0>("nk1"), array<T0=String><T0>("new_nv1")), map<T0=String, T1=String><Array(T0), Array(T1)>(array<T0=String><T0>("nk3"), array<T0=String><T0>("nv3")))))
optimized expr : {"k1":{"nk1":"new_nv1"}, "k2":{"nk3":"nv3"}}
output type    : Map(String, Map(String, String))
output domain  : {[{"k1"..="k2"}], [{[{"nk1"..="nk3"}], [{"new_nv1"..="nv3"}]}]}
output         : {'k1':{'nk1':'new_nv1'}, 'k2':{'nk3':'nv3'}}


